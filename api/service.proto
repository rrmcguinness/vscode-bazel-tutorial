/* Copyright 2022 Ryan McGuinness
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 syntax = "proto3";

 package example.service;

 /*
 * Go Lang Options
 */
option go_package = "example/service";

/*
 * Java Options
 */
option java_package = "example.service";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "api/model.proto";

service Stores {
    rpc List(google.protobuf.Empty)
        returns (stream example.model.Store) {}

    rpc Create(example.model.Store)
        returns (example.model.Store) {}

    rpc Update(example.model.Store) returns (example.model.Store) {}

    rpc Delete(example.model.IdRequest) returns (example.model.SimpleResponse) {}
}

service Customers {
    rpc Find(example.model.CustomerSearch)
        returns (stream example.model.Customer) {}

    rpc Create(example.model.Customer)
        returns (example.model.Customer) {}

    rpc Update(example.model.Customer)
        returns (example.model.Customer) {}

    rpc Delete(example.model.IdRequest)
        returns (example.model.SimpleResponse) {}
}

service Items {
    rpc Find(example.model.ItemSearch)
        returns (stream example.model.Item) {}

    rpc Get(example.model.IdRequest)
        returns (example.model.Item) {}

    rpc Create(example.model.Item)
        returns (example.model.Item) {}

    rpc Update(example.model.Item)
        returns (example.model.Item) {}

    rpc Delete(example.model.IdRequest)
        returns (example.model.SimpleResponse) {}

    rpc Restore(example.model.IdRequest)
        returns (example.model.SimpleResponse) {}
}



service Transactions {

    rpc Create(example.model.Store)
        returns(example.model.TransactionResponse) {}

    rpc AddCustomer(example.model.TransactionCustomerRequest)
        returns (example.model.TransactionResponse) {}

    rpc AddItem(example.model.TransactionItemRequest)
        returns (example.model.TransactionResponse) {}

    rpc RemoveItem(example.model.TransactionItemRequest)
        returns (example.model.TransactionResponse) {}

    rpc PrepareForTender(example.model.TransactionRequest)
        returns (example.model.TransactionResponse) {};

        // Add many more functions here :D
}
